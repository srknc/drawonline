---
AWSTemplateFormatVersion: '2010-09-09'
Resources:





  CodePipelineServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              Resource: "*"
              Effect: Allow
            - Action:
              - s3:PutObject
              Resource:
              - arn:aws:s3:::cloudformation*
              - arn:aws:s3:::codepipeline*
              - arn:aws:s3:::elasticbeanstalk*
              Effect: Allow
            - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              Resource: "*"
              Effect: Allow
            - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              Resource: "*"
              Effect: Allow
            - Action:
              - elasticbeanstalk:CreateApplicationVersion
              - elasticbeanstalk:DescribeApplicationVersions
              - elasticbeanstalk:DescribeEnvironments
              - elasticbeanstalk:DescribeEvents
              - elasticbeanstalk:UpdateEnvironment
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeScalingActivities
              - autoscaling:ResumeProcesses
              - autoscaling:SuspendProcesses
              - cloudformation:GetTemplate
              - cloudformation:DescribeStackResource
              - cloudformation:DescribeStackResources
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - ec2:DescribeInstances
              - ec2:DescribeImages
              - ec2:DescribeAddresses
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - ec2:DescribeSecurityGroups
              - ec2:DescribeKeyPairs
              - elasticloadbalancing:DescribeLoadBalancers
              - rds:DescribeDBInstances
              - rds:DescribeOrderableDBInstanceOptions
              - sns:ListSubscriptionsByTopic
              Resource: "*"
              Effect: Allow
            - Action:
              - lambda:invokefunction
              - lambda:listfunctions
              Resource: "*"
              Effect: Allow
            - Action:
              - s3:ListBucket
              - s3:GetBucketPolicy
              - s3:GetObjectAcl
              - s3:PutObjectAcl
              - s3:DeleteObject
              Resource: arn:aws:s3:::elasticbeanstalk*
              Effect: Allow
            Version: '2012-10-17'

  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: CloudWatchLogsPolicy
              Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource:
              - "*"
            - Sid: CodeCommitPolicy
              Effect: Allow
              Action:
              - codecommit:GitPull
              Resource:
              - "*"
            - Sid: S3GetObjectPolicy
              Effect: Allow
              Action:
              - s3:GetObject
              - s3:GetObjectVersion
              Resource:
              - "*"
            - Sid: S3PutObjectPolicy
              Effect: Allow
              Action:
              - s3:PutObject
              Resource:
              - "*"
            - Sid: ECRPullPolicy
              Effect: Allow
              Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              Resource:
              - "*"
            - Sid: ECRAuthPolicy
              Effect: Allow
              Action:
              - ecr:GetAuthorizationToken
              Resource:
              - "*"


  CodeBuildS3CopyFiles:
    Type: AWS::CodeBuild::Project
    DependsOn:
    - CodeBuildServiceRole
    Properties:
      Name: Deploy
      Description: Copies static files to S3
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: amazonlinux:latest
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          "
          version: 0.2 \n
          env: \n
            - variables: \n
              - foo: bar \n
          phases: \n
            - install: \n
              - commands: \n
                  - credentials=$(curl http://169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI) \n
                  - export AWS_ACCESS_KEY_ID=$(echo $credentials | jq -r /'.AccessKeyId/') \n
                  - export AWS_SECRET_ACCESS_KEY=$(echo $credentials | jq -r /'.SecretAccessKey/') \n
                  - export AWS_SECURITY_TOKEN=$(echo $credentials | jq -r /'.Token/') \n
                  #- export AWS_ROLE=xxxxxxxxxxxx \n
                  - export AWS_SESSION_TOKEN=$AWS_SECURITY_TOKEN \n
                  - aws s3 ls \n
          "
      TimeoutInMinutes: 10


  WebSiteCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
        - CodePipelineServiceRole
        - Arn
      Stages:
        -
          Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Branch: master
                OAuthToken: xxxxxxxxxxxx
                Owner: srknc
                PollForSourceChanges: true
                Repo: drawonline #TODO: should go to parameters
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

        -
          Name: Deploy
          Actions:
          - Name: Artifact
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: '1'
              Provider: CodeBuild
            InputArtifacts:
            - Name: SourceOutput
            OutputArtifacts:
            - Name: DeployOutput
            Configuration:
              ProjectName: !Ref CodeBuildS3CopyFiles
            RunOrder: 1

      ArtifactStore:
        Type: S3
        Location:
          Ref: BucketAdministrativeName


Parameters:
 BucketAdministrativeName:
   Description: administarative purpose bucket
   Type: String
